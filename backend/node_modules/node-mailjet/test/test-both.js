/* global describe, it */
const API_TOKEN = process.env.MJ_API_TOKEN
const API_KEY = process.env.MJ_APIKEY_PUBLIC
const API_SECRET = process.env.MJ_APIKEY_PRIVATE

var Mailjet = require('../mailjet-client')
var chai = require('chai')
var expect = chai.expect
var should = chai.should() // eslint-disable-line no-unused-vars
var Promise = require('bluebird')

var smsOptions = {
  version: 'v4'
}

var emailOptions = {
  version: 'v3'
}

describe('Basic Usage', function () {
  describe('method call', function () {    
    var smsClient = Mailjet.connect(API_TOKEN)

    describe('get', function () {
      it('retirieve list of messages', function (done) {        
        var smsGet = smsClient.get('sms', smsOptions)
        var promise = smsGet
          .request({ FromTS: +new Date, ToTS: +new Date })
          .then(function (response) {
            expect(response.body).to.be.a('object')
            expect(response.body.Data.length).to.equal(0)
            done()
          })
          .catch(function (reason) {
            expect(reason).to.equal(undefined)
            done()
          })
        expect(Promise.prototype.isPrototypeOf(promise)).to.equal(true)
      })
    })

    describe('get', function () {
      var emailClient = Mailjet.connect(API_KEY, API_SECRET, emailOptions)
      var contact = emailClient.get('contact')

      it('calls the contact ressource instance whith no parameters', function (done) {
        contact.request()
          .then(function (result) {
            result.body.should.be.a('object')
            expect(result.response.statusCode).to.equal(200)
            done()
          })
          .catch(function (reason) {
            // We want it to raise an error if it gets here
            expect(reason).to.equal(undefined)
            done()
          })
      })
    })
  })
})